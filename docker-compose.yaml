services:
  db:
    image: pgrouting/pgrouting:17-3.5-main
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./postgres/postgresql.conf:/postgresql.conf
    container_name: spdb_pg
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    entrypoint: ["docker-entrypoint.sh", "postgres", "-c", "config_file=/postgresql.conf"]

  app:
    build:
      context: ./app
    container_name: streamlit-app
    restart: unless-stopped
    ports:
      - "8501:8501"
    depends_on:
      db:
        condition: service_started
      importer:
        condition: service_completed_successfully
    environment:
      PG_HOST: db
      PG_PASSWORD: ${POSTGRES_PASSWORD}
      PG_USER: ${POSTGRES_USER}
    volumes:
      - ./app/code:/app/code

  importer:
    build:
      context: ./db/osm_imports
      dockerfile: Dockerfile
    depends_on:
      - db
    environment:
      PG_HOST: db
      PG_PASSWORD: ${POSTGRES_PASSWORD}
      PG_USER: ${POSTGRES_USER}
    volumes:
      - ./data:/data

  pgadmin:
    image: dpage/pgadmin4:9
    container_name: pgadmin4
    restart: unless-stopped
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: root@root.com
      PGADMIN_DEFAULT_PASSWORD: toor
      # 30 = warn
      PGADMIN_CONFIG_CONSOLE_LOG_LEVEL: 30
      # prevent gunicorn from spamming the logs
      # https://github.com/docker/compose/issues/8578#issuecomment-945228061
      GUNICORN_ACCESS_LOGFILE: '/dev/null'
    volumes:
      - ./pgadmin/servers.json:/pgadmin4/servers.json

volumes:
  db-data:
